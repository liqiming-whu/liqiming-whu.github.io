<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>生信技能树</title>
  
  <subtitle>venuslee的个人网站</subtitle>
  <link href="https://venuslee.vercel.app/atom.xml" rel="self"/>
  
  <link href="https://venuslee.vercel.app/"/>
  <updated>2021-04-06T13:33:51.672Z</updated>
  <id>https://venuslee.vercel.app/</id>
  
  <author>
    <name>venuslee</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>gtf文件转成bed文件以及一个处理gtf的轮子</title>
    <link href="https://venuslee.vercel.app/2021/04/06/%E4%B8%80%E4%B8%AA%E5%A4%84%E7%90%86gtf%E6%96%87%E4%BB%B6%E7%9A%84%E8%BD%AE%E5%AD%90/"/>
    <id>https://venuslee.vercel.app/2021/04/06/%E4%B8%80%E4%B8%AA%E5%A4%84%E7%90%86gtf%E6%96%87%E4%BB%B6%E7%9A%84%E8%BD%AE%E5%AD%90/</id>
    <published>2021-04-06T08:53:37.000Z</published>
    <updated>2021-04-06T13:33:51.672Z</updated>
    
    <content type="html"><![CDATA[<h2 id="把gtf文件转成bed12文件"><a href="#把gtf文件转成bed12文件" class="headerlink" title="把gtf文件转成bed12文件"></a>把gtf文件转成bed12文件</h2><p>bioconda上的ucsc软件都是几万年前的老版本，所以最好直接去<a href="http://hgdownload.cse.ucsc.edu/admin/exe/linux.x86_64/%EF%BC%89">ucsc</a>下载：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget http://hgdownload.cse.ucsc.edu/admin/exe/linux.x86_64/gtfToGenePred</span><br><span class="line">wget http://hgdownload.cse.ucsc.edu/admin/exe/linux.x86_64/genePredToBed</span><br><span class="line">chmod +x genePredToBed gtfToGenePred</span><br></pre></td></tr></table></figure><p>然后：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./gtfToGenePred gencode.v32.annotation.gtf hg38.genePhred &amp;&amp; ./genePredToBed hg38.genePhred hg38.bed12 &amp;&amp; rm hg38.genePhred </span><br></pre></td></tr></table></figure><h2 id="把gtf文件转成bed6文件"><a href="#把gtf文件转成bed6文件" class="headerlink" title="把gtf文件转成bed6文件"></a>把gtf文件转成bed6文件</h2><p>我们需要两个软件，用conda装就完事了，也可以clone源码安装最新版。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda install -c bioconda bedtools bedops</span><br></pre></td></tr></table></figure><h3 id="gtf转gene-bed"><a href="#gtf转gene-bed" class="headerlink" title="gtf转gene.bed"></a>gtf转gene.bed</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">&#x27;&#123;if($3==&quot;gene&quot;)print $0&quot; transcript_id \&quot;\&quot;;&quot;&#125;&#x27;</span> gencode.v32.annotation.gtf | convert2bed -i gtf | cut -f1-6 &gt; hg38.gene.bed</span><br></pre></td></tr></table></figure><p>也可以不装bedops，会稍微麻烦一点：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">&#x27;&#123;OFS=&quot;\t&quot;&#125;&#123;if($3==&quot;gene&quot;)&#123;match($0,/gene_id &quot;(\S*)&quot;/,a);print $1,$4-1,$5,a[1],$6,$7&#125;&#125;&#x27;</span> gencode.v32.annotation.gtf &gt; hg38.gene.bed</span><br></pre></td></tr></table></figure><p>可以用<code>diff bed1 bed2</code>检查一下两种方式是不是一样的。</p><h3 id="gtf转transcript-bed"><a href="#gtf转transcript-bed" class="headerlink" title="gtf转transcript.bed"></a>gtf转transcript.bed</h3><p>gtf转transcript不能用convert2bed了，convert2bed转出来的第三列是gene_id，我们要的是transcript_id。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">&#x27;&#123;OFS=&quot;\t&quot;&#125;&#123;if($3==&quot;transcript&quot;)&#123;match($0,/transcript_id &quot;(\S*)&quot;/,a);print $1,$4-1,$5,a[1],$6,$7&#125;&#125;&#x27;</span> gencode.v32.annotation.gtf &gt; hg38.transcript.bed</span><br></pre></td></tr></table></figure><h3 id="gtf转exon-bed"><a href="#gtf转exon-bed" class="headerlink" title="gtf转exon.bed"></a>gtf转exon.bed</h3><p>严格来说，exon和intron是transcript的基本单位，第三列要用transcript_id。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">&#x27;&#123;OFS=&quot;\t&quot;&#125;&#123;if($3==&quot;exon&quot;)&#123;match($0,/transcript_id &quot;(\S*)&quot;/,a);print $1,$4-1,$5,a[1],$6,$7&#125;&#125;&#x27;</span> gencode.v32.annotation.gtf&gt; hg38.exon.bed</span><br></pre></td></tr></table></figure><h3 id="gtf转intron-bed"><a href="#gtf转intron-bed" class="headerlink" title="gtf转intron.bed"></a>gtf转intron.bed</h3><p>gtf注释中不含intron，不过我们用bedtools从transcript里面减去exon就行了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bedtools subtract -a hg38.transcript.bed -b hg38.exon.bed -s &gt; hg38.intron.bed</span><br></pre></td></tr></table></figure><hr><p>把上面的代码合在一起，写在一个脚本gtfparser.sh里面：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#！/bin/sh</span></span><br><span class="line">GTF=<span class="variable">$1</span></span><br><span class="line">PREFIX=<span class="variable">$2</span></span><br><span class="line">awk <span class="string">&#x27;&#123;OFS=&quot;\t&quot;&#125;&#123;if($3==&quot;gene&quot;)&#123;match($0,/gene_id &quot;(\S*)&quot;/,a);print $1,$4-1,$5,a[1],$6,$7&#125;&#125;&#x27;</span> <span class="variable">$GTF</span> &gt; <span class="variable">$PREFIX</span>.gene.bed</span><br><span class="line">awk <span class="string">&#x27;&#123;OFS=&quot;\t&quot;&#125;&#123;if($3==&quot;transcript&quot;)&#123;match($0,/transcript_id &quot;(\S*)&quot;/,a);print $1,$4-1,$5,a[1],$6,$7&#125;&#125;&#x27;</span> <span class="variable">$GTF</span> &gt; <span class="variable">$PREFIX</span>.transcript.bed</span><br><span class="line">awk <span class="string">&#x27;&#123;OFS=&quot;\t&quot;&#125;&#123;if($3==&quot;exon&quot;)&#123;match($0,/transcript_id &quot;(\S*)&quot;/,a);print $1,$4-1,$5,a[1],$6,$7&#125;&#125;&#x27;</span> <span class="variable">$GTF</span>&gt; <span class="variable">$PREFIX</span>.exon.bed</span><br><span class="line">bedtools subtract -a <span class="variable">$PREFIX</span>.transcript.bed -b <span class="variable">$PREFIX</span>.exon.bed -s &gt; <span class="variable">$PREFIX</span>.intron.bed</span><br></pre></td></tr></table></figure><p>跑起来：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chmod +x gtfparser.sh</span><br><span class="line">./gtfparser.sh gencode.v32.annotation.gtf hg38</span><br></pre></td></tr></table></figure><p>所以说convert2bed其实没啥用~</p><p><del>好了，就完了，下面的不用看了</del></p><hr><h2 id="一个还行的轮子：gtfparser-py"><a href="#一个还行的轮子：gtfparser-py" class="headerlink" title="一个还行的轮子：gtfparser.py"></a>一个还行的轮子：gtfparser.py</h2><h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">python gtfparser.py 参数</span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line">chmod +x gtfparse.py</span><br><span class="line">./gtfparser.py 参数</span><br></pre></td></tr></table></figure><h3 id="gtf转bed12"><a href="#gtf转bed12" class="headerlink" title="gtf转bed12"></a>gtf转bed12</h3><p>这个很简单：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./gtfparser.py gencode.v32.annotation.gtf &gt; hg38.bed12</span><br></pre></td></tr></table></figure><h3 id="gtf转gene-bed6"><a href="#gtf转gene-bed6" class="headerlink" title="gtf转gene.bed6"></a>gtf转gene.bed6</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./gtfparser.py gencode.v32.annotation.gtf --attribute gene_id --<span class="built_in">type</span> gene --format bed6 &gt; hg38.gene.bed</span><br></pre></td></tr></table></figure><h3 id="gtf转exon-bed-1"><a href="#gtf转exon-bed-1" class="headerlink" title="gtf转exon.bed"></a>gtf转exon.bed</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./gtfparser.py gencode.v32.annotation.gtf --attribute gene_id --<span class="built_in">type</span> exon --format bed6 &gt; hg38.exon.bed</span><br></pre></td></tr></table></figure><h3 id="gtf转intron-bed-1"><a href="#gtf转intron-bed-1" class="headerlink" title="gtf转intron.bed"></a>gtf转intron.bed</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./gtfparser.py gencode.v32.annotation.gtf --attribute transcript_id --<span class="built_in">type</span> exon --format intron &gt; hg38.intron.bed</span><br></pre></td></tr></table></figure><h3 id="提取gene-info"><a href="#提取gene-info" class="headerlink" title="提取gene_info"></a>提取gene_info</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./gtfparser.py gencode.v32.annotation.gtf --attribute gene_id --<span class="built_in">type</span> gene --format info &gt; hg38.gene_info.tsv</span><br></pre></td></tr></table></figure><h3 id="提取transcript-info"><a href="#提取transcript-info" class="headerlink" title="提取transcript_info"></a>提取transcript_info</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./gtfparser.py gencode.v32.annotation.gtf --attribute transcript_id --<span class="built_in">type</span> transcript --format info &gt; hg38.transcript_info</span><br></pre></td></tr></table></figure><hr><h3 id="gtfparser-py代码如下"><a href="#gtfparser-py代码如下" class="headerlink" title="gtfparser.py代码如下"></a>gtfparser.py代码如下</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> argparse</span><br><span class="line"><span class="keyword">from</span> itertools <span class="keyword">import</span> groupby</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">reader</span>(<span class="params">fname, header=<span class="literal">None</span>, sep=<span class="string">&quot;\t&quot;</span>, skip_while=<span class="literal">None</span></span>):</span></span><br><span class="line">    sep = re.<span class="built_in">compile</span>(sep)</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(fname) <span class="keyword">as</span> f:</span><br><span class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> f:</span><br><span class="line">            toks = sep.split(line.rstrip(<span class="string">&quot;\r\n&quot;</span>))</span><br><span class="line">            <span class="keyword">if</span> skip_while:</span><br><span class="line">                <span class="keyword">if</span> skip_while(toks):</span><br><span class="line">                    <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">if</span> header:</span><br><span class="line">                <span class="keyword">yield</span> header(toks)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">yield</span> toks</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">parse_attributes</span>(<span class="params">term, attributes</span>):</span></span><br><span class="line">    parse_attr = re.<span class="built_in">compile</span>(<span class="string">&#x27;&#123;term&#125; &quot;([^&quot;]+)&quot;&#x27;</span>.<span class="built_in">format</span>(term=term))</span><br><span class="line">    patterns = parse_attr.findall(attributes)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> patterns:</span><br><span class="line">        <span class="keyword">return</span> patterns[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;NA&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Alias</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, data</span>):</span></span><br><span class="line">        self.data = data</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update</span>(<span class="params">self, data</span>):</span></span><br><span class="line">        self.data = data</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__repr__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">str</span>(self.data)</span><br><span class="line"></span><br><span class="line">    __str__ = __repr__</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TransInfo</span>:</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;Get transcript info&quot;&quot;&quot;</span></span><br><span class="line">    __slots__ = [<span class="string">&quot;transcript_id&quot;</span>, <span class="string">&quot;transcript_name&quot;</span>, <span class="string">&quot;transcript_type&quot;</span>,</span><br><span class="line">                 <span class="string">&quot;gene_id&quot;</span>, <span class="string">&quot;gene_name&quot;</span>, <span class="string">&quot;gene_type&quot;</span>, <span class="string">&quot;strand&quot;</span>]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, gtf, attr</span>):</span></span><br><span class="line">        self.strand = gtf.strand</span><br><span class="line">        attributes = gtf.attributes</span><br><span class="line">        self.transcript_id = attr</span><br><span class="line">        self.transcript_name = parse_attributes(<span class="string">&quot;transcript_name&quot;</span>, attributes)</span><br><span class="line">        self.transcript_type = parse_attributes(<span class="string">&quot;transcript_type&quot;</span>, attributes)</span><br><span class="line">        self.gene_id = parse_attributes(<span class="string">&quot;gene_id&quot;</span>, attributes)</span><br><span class="line">        self.gene_name = parse_attributes(<span class="string">&quot;gene_name&quot;</span>, attributes)</span><br><span class="line">        self.gene_type = parse_attributes(<span class="string">&quot;gene_type&quot;</span>, attributes)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__repr__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Transcript(&#123;transcript_id&#125; &#123;transcript_type&#125; &#123;strand&#125;)&quot;</span>.<span class="built_in">format</span>(</span><br><span class="line">            transcript_id=self.transcript_id,</span><br><span class="line">            transcript_type=self.transcript_type,</span><br><span class="line">            strand=self.strand</span><br><span class="line">            )</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;\t&quot;</span>.join(<span class="built_in">str</span>(<span class="built_in">getattr</span>(self, s)) <span class="keyword">for</span> s <span class="keyword">in</span> self.__slots__)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GeneInfo</span>:</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;Get gene info&quot;&quot;&quot;</span></span><br><span class="line">    __slots__ = [<span class="string">&quot;gene_id&quot;</span>, <span class="string">&quot;gene_name&quot;</span>, <span class="string">&quot;gene_type&quot;</span>, <span class="string">&quot;strand&quot;</span>]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, gtf, attr</span>):</span></span><br><span class="line">        self.strand = gtf.strand</span><br><span class="line">        attributes = gtf.attributes</span><br><span class="line">        self.gene_id = attr</span><br><span class="line">        self.gene_name = parse_attributes(<span class="string">&quot;gene_name&quot;</span>, attributes)</span><br><span class="line">        self.gene_type = parse_attributes(<span class="string">&quot;gene_type&quot;</span>, attributes)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__repr__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Gene(&#123;gene_id&#125; &#123;gene_type&#125; &#123;strand&#125;)&quot;</span>.<span class="built_in">format</span>(</span><br><span class="line">            gene_id=self.gene_id,</span><br><span class="line">            gene_type=self.gene_type,</span><br><span class="line">            strand=self.strand</span><br><span class="line">            )</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;\t&quot;</span>.join(<span class="built_in">str</span>(<span class="built_in">getattr</span>(self, s)) <span class="keyword">for</span> s <span class="keyword">in</span> self.__slots__)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Bed6</span>:</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;Convert GTF to Bed6.&quot;&quot;&quot;</span></span><br><span class="line">    __slots__ = [<span class="string">&quot;chrom&quot;</span>, <span class="string">&quot;start&quot;</span>, <span class="string">&quot;end&quot;</span>, <span class="string">&quot;name&quot;</span>, <span class="string">&quot;score&quot;</span>, <span class="string">&quot;strand&quot;</span>]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, gtf, attr</span>):</span></span><br><span class="line">        self.chrom = gtf.chrom</span><br><span class="line">        self.start = gtf.start - <span class="number">1</span></span><br><span class="line">        self.end = gtf.end</span><br><span class="line">        self.name = attr</span><br><span class="line">        self.score = gtf.score</span><br><span class="line">        self.strand = gtf.strand</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__repr__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Bed6(&#123;chrom&#125;:&#123;start&#125;-&#123;end&#125;)&quot;</span>.<span class="built_in">format</span>(</span><br><span class="line">            chrom=self.chrom, start=self.start, end=self.end)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;\t&quot;</span>.join(<span class="built_in">str</span>(<span class="built_in">getattr</span>(self, s)) <span class="keyword">for</span> s <span class="keyword">in</span> self.__slots__)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Bed12</span>:</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;Convert GTF to Bed12.&quot;&quot;&quot;</span></span><br><span class="line">    __slots__ = [<span class="string">&quot;chrom&quot;</span>, <span class="string">&quot;start&quot;</span>, <span class="string">&quot;end&quot;</span>, <span class="string">&quot;name&quot;</span>, <span class="string">&quot;score&quot;</span>, <span class="string">&quot;strand&quot;</span>,</span><br><span class="line">                 <span class="string">&quot;thickStart&quot;</span>, <span class="string">&quot;thickEnd&quot;</span>, <span class="string">&quot;itemRgb&quot;</span>, <span class="string">&quot;blockCount&quot;</span>,</span><br><span class="line">                 <span class="string">&quot;blockSizes&quot;</span>, <span class="string">&quot;blockStarts&quot;</span>]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, gtf, attr, thickStart, thickEnd</span>):</span></span><br><span class="line">        self.chrom = gtf.chrom</span><br><span class="line">        self.start = gtf.start - <span class="number">1</span></span><br><span class="line">        self.end = Alias(gtf.end)</span><br><span class="line">        self.name = attr</span><br><span class="line">        self.score = <span class="number">0</span> <span class="keyword">if</span> gtf.score == <span class="string">&#x27;.&#x27;</span> <span class="keyword">else</span> <span class="built_in">int</span>(gtf.score)</span><br><span class="line">        self.strand = gtf.strand</span><br><span class="line">        <span class="keyword">if</span> thickStart <span class="keyword">and</span> thickEnd:</span><br><span class="line">            self.thickStart = thickStart</span><br><span class="line">            self.thickEnd = thickEnd</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.thickStart = self.end</span><br><span class="line">            self.thickEnd = self.end</span><br><span class="line">        self.itemRgb = <span class="number">0</span></span><br><span class="line">        self.blockCount = <span class="number">1</span></span><br><span class="line">        self.blockSizes = <span class="string">&quot;&#123;size&#125;,&quot;</span>.<span class="built_in">format</span>(size=gtf.end - gtf.start + <span class="number">1</span>)</span><br><span class="line">        self.blockStarts = <span class="string">&quot;&#123;start&#125;,&quot;</span>.<span class="built_in">format</span>(start=<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__repr__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Bed12(&#123;chrom&#125;:&#123;start&#125;-&#123;end&#125;)&quot;</span>.<span class="built_in">format</span>(</span><br><span class="line">            chrom=self.chrom, start=self.start, end=self.end)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;\t&quot;</span>.join(<span class="built_in">str</span>(<span class="built_in">getattr</span>(self, s)) <span class="keyword">for</span> s <span class="keyword">in</span> self.__slots__)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add_exon</span>(<span class="params">self, gtf</span>):</span></span><br><span class="line">        self.end.update(gtf.end)</span><br><span class="line">        self.blockSizes += <span class="string">&quot;&#123;size&#125;,&quot;</span>.<span class="built_in">format</span>(size=gtf.end - gtf.start + <span class="number">1</span>)</span><br><span class="line">        self.blockStarts += <span class="string">&quot;&#123;start&#125;,&quot;</span>.<span class="built_in">format</span>(start=gtf.start - <span class="number">1</span> - self.start)</span><br><span class="line">        self.blockCount += <span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Intron</span>:</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;Convert GTF to Intron Bed6.&quot;&quot;&quot;</span></span><br><span class="line">    __slots__ = [<span class="string">&quot;chrom&quot;</span>, <span class="string">&quot;start&quot;</span>, <span class="string">&quot;end&quot;</span>, <span class="string">&quot;name&quot;</span>, <span class="string">&quot;score&quot;</span>, <span class="string">&quot;strand&quot;</span>]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, exon_1, exon_2, attr</span>):</span></span><br><span class="line">        self.chrom = exon_1.chrom</span><br><span class="line">        self.start = exon_1.end</span><br><span class="line">        self.end = exon_2.start - <span class="number">1</span></span><br><span class="line">        <span class="keyword">assert</span> self.end &gt;= self.start</span><br><span class="line">        self.name = attr</span><br><span class="line">        self.score = <span class="string">&#x27;.&#x27;</span></span><br><span class="line">        self.strand = exon_1.strand</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__repr__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Intron(&#123;chrom&#125;:&#123;start&#125;-&#123;end&#125;)&quot;</span>.<span class="built_in">format</span>(</span><br><span class="line">            chrom=self.chrom, start=self.start, end=self.end)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;\t&quot;</span>.join(<span class="built_in">str</span>(<span class="built_in">getattr</span>(self, s)) <span class="keyword">for</span> s <span class="keyword">in</span> self.__slots__)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GTF</span>:</span></span><br><span class="line">    __slots__ = [<span class="string">&#x27;seqname&#x27;</span>, <span class="string">&#x27;source&#x27;</span>, <span class="string">&#x27;feature&#x27;</span>, <span class="string">&#x27;start&#x27;</span>, <span class="string">&#x27;end&#x27;</span>, <span class="string">&#x27;score&#x27;</span>,</span><br><span class="line">                 <span class="string">&#x27;strand&#x27;</span>, <span class="string">&#x27;frame&#x27;</span>, <span class="string">&#x27;attributes&#x27;</span>, <span class="string">&#x27;chrom&#x27;</span>]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, args</span>):</span></span><br><span class="line">        <span class="keyword">for</span> s, v <span class="keyword">in</span> <span class="built_in">zip</span>(self.__slots__[:<span class="number">9</span>], args):</span><br><span class="line">            <span class="built_in">setattr</span>(self, s, v)</span><br><span class="line">        self.start = <span class="built_in">int</span>(self.start)</span><br><span class="line">        self.end = <span class="built_in">int</span>(self.end)</span><br><span class="line">        self.chrom = self.seqname</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__repr__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;GTF(&#123;seqname&#125;:&#123;start&#125;-&#123;end&#125;)&quot;</span>.<span class="built_in">format</span>(</span><br><span class="line">            seqname=self.seqname, start=self.start, end=self.end)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>(<span class="params">gtf, attribute_id, feature, outformat</span>):</span></span><br><span class="line">    <span class="keyword">assert</span> outformat <span class="keyword">in</span> (</span><br><span class="line">        <span class="string">&quot;bed12&quot;</span>, <span class="string">&quot;bed6&quot;</span>, <span class="string">&quot;intron&quot;</span>, <span class="string">&quot;info&quot;</span></span><br><span class="line">        ), <span class="string">&quot;output file format: &#123;&#125; not support.&quot;</span>.<span class="built_in">format</span>(outformat)</span><br><span class="line">    parse_attr = re.<span class="built_in">compile</span>(</span><br><span class="line">        <span class="string">&#x27;&#123;attribute_id&#125; &quot;([^&quot;]+)&quot;&#x27;</span>.<span class="built_in">format</span>(attribute_id=attribute_id))</span><br><span class="line">    <span class="keyword">if</span> outformat == <span class="string">&#x27;bed12&#x27;</span>:</span><br><span class="line">        cds = <span class="built_in">dict</span>()</span><br><span class="line">        <span class="keyword">for</span> k, group <span class="keyword">in</span> groupby(</span><br><span class="line">            reader(</span><br><span class="line">                gtf,</span><br><span class="line">                header=GTF,</span><br><span class="line">                skip_while=<span class="keyword">lambda</span> toks: toks[<span class="number">0</span>].startswith(<span class="string">&quot;#&quot;</span>) <span class="keyword">or</span> <span class="keyword">not</span> (</span><br><span class="line">                    toks[<span class="number">2</span>] == <span class="string">&#x27;CDS&#x27;</span> <span class="keyword">or</span> toks[<span class="number">2</span>] == <span class="string">&#x27;stop_codon&#x27;</span>)</span><br><span class="line">                ),</span><br><span class="line">            <span class="keyword">lambda</span> x: parse_attr.findall(x.attributes)[<span class="number">0</span>]</span><br><span class="line">        ):</span><br><span class="line">            gtfs = <span class="built_in">list</span>(<span class="built_in">sorted</span>(group, key=<span class="keyword">lambda</span> gtf: gtf.start))</span><br><span class="line">            thickStart = gtfs[<span class="number">0</span>].start - <span class="number">1</span></span><br><span class="line">            thickEnd = gtfs[-<span class="number">1</span>].end</span><br><span class="line">            cds[k] = (thickStart, thickEnd)</span><br><span class="line">    <span class="keyword">if</span> outformat == <span class="string">&#x27;info&#x27;</span>:</span><br><span class="line">        <span class="keyword">if</span> attribute_id == <span class="string">&#x27;transcript_id&#x27;</span>:</span><br><span class="line">            head = [<span class="string">&quot;transcript_id&quot;</span>, <span class="string">&quot;transcript_name&quot;</span>, <span class="string">&quot;transcript_type&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;gene_id&quot;</span>, <span class="string">&quot;gene_name&quot;</span>, <span class="string">&quot;gene_type&quot;</span>, <span class="string">&quot;strand&quot;</span>]</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;\t&quot;</span>.join(head))</span><br><span class="line">        <span class="keyword">elif</span> attribute_id == <span class="string">&#x27;gene_id&#x27;</span>:</span><br><span class="line">            head = [<span class="string">&quot;gene_id&quot;</span>, <span class="string">&quot;gene_name&quot;</span>, <span class="string">&quot;gene_type&quot;</span>, <span class="string">&quot;strand&quot;</span>]</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;\t&quot;</span>.join(head))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">raise</span> Exception(<span class="string">&quot;GTF attribute and outformat not support.&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> k, group <span class="keyword">in</span> groupby(</span><br><span class="line">        reader(</span><br><span class="line">            gtf,</span><br><span class="line">            header=GTF,</span><br><span class="line">            skip_while=<span class="keyword">lambda</span> toks: toks[<span class="number">0</span>].startswith(<span class="string">&quot;#&quot;</span>) <span class="keyword">or</span> <span class="keyword">not</span> (</span><br><span class="line">                toks[<span class="number">2</span>] == feature)</span><br><span class="line">            ),</span><br><span class="line">        <span class="keyword">lambda</span> x: parse_attr.findall(x.attributes)[<span class="number">0</span>]</span><br><span class="line">    ):</span><br><span class="line">        <span class="comment"># loop over the group building the single bed12 line</span></span><br><span class="line">        <span class="keyword">if</span> outformat == <span class="string">&#x27;bed12&#x27;</span>:</span><br><span class="line">            bed = <span class="literal">None</span></span><br><span class="line">            <span class="keyword">for</span> gtf_entry <span class="keyword">in</span> <span class="built_in">sorted</span>(group, key=<span class="keyword">lambda</span> gtf: gtf.start):</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">not</span> bed:</span><br><span class="line">                    <span class="keyword">try</span>:</span><br><span class="line">                        thickStart, thickEnd = cds[k]</span><br><span class="line">                    <span class="keyword">except</span> Exception:</span><br><span class="line">                        thickStart = thickEnd = <span class="literal">None</span></span><br><span class="line">                    bed = Bed12(gtf_entry, k, thickStart, thickEnd)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    bed.add_exon(gtf_entry)</span><br><span class="line">            <span class="built_in">print</span>(bed)</span><br><span class="line">        <span class="keyword">elif</span> outformat == <span class="string">&#x27;bed6&#x27;</span>:</span><br><span class="line">            <span class="keyword">for</span> gtf_entry <span class="keyword">in</span> group:</span><br><span class="line">                bed = Bed6(gtf_entry, k)</span><br><span class="line">                <span class="built_in">print</span>(bed)</span><br><span class="line">        <span class="keyword">elif</span> outformat == <span class="string">&#x27;intron&#x27;</span>:</span><br><span class="line">            exons = []</span><br><span class="line">            <span class="keyword">for</span> gtf_entry <span class="keyword">in</span> <span class="built_in">sorted</span>(group, key=<span class="keyword">lambda</span> gtf: gtf.start):</span><br><span class="line">                exons.append(gtf_entry)</span><br><span class="line">            <span class="keyword">assert</span> <span class="built_in">len</span>(exons) &gt; <span class="number">0</span></span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">len</span>(exons) &lt; <span class="number">2</span>:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(exons) - <span class="number">1</span>):</span><br><span class="line">                intron = Intron(exons[i], exons[i+<span class="number">1</span>], k)</span><br><span class="line">                <span class="built_in">print</span>(intron)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">elif</span> outformat == <span class="string">&#x27;info&#x27;</span> <span class="keyword">and</span> attribute_id == <span class="string">&#x27;transcript_id&#x27;</span>:</span><br><span class="line">            <span class="keyword">for</span> gtf_entry <span class="keyword">in</span> group:</span><br><span class="line">                transcript_info = TransInfo(gtf_entry, k)</span><br><span class="line">                <span class="built_in">print</span>(transcript_info)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">elif</span> outformat == <span class="string">&#x27;info&#x27;</span> <span class="keyword">and</span> attribute_id == <span class="string">&#x27;gene_id&#x27;</span>:</span><br><span class="line">            <span class="keyword">for</span> gtf_entry <span class="keyword">in</span> group:</span><br><span class="line">                gene_info = GeneInfo(gtf_entry, k)</span><br><span class="line">                <span class="built_in">print</span>(gene_info)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    p = argparse.ArgumentParser(</span><br><span class="line">        description=__doc__,</span><br><span class="line">        formatter_class=argparse.ArgumentDefaultsHelpFormatter)</span><br><span class="line">    p.add_argument(<span class="string">&#x27;gtf&#x27;</span>, <span class="built_in">help</span>=<span class="string">&quot;gtf file download from Genecode.&quot;</span>)</span><br><span class="line">    p.add_argument(<span class="string">&#x27;--attribute&#x27;</span>, dest=<span class="string">&#x27;attr&#x27;</span>, default=<span class="string">&#x27;transcript_id&#x27;</span>, <span class="built_in">help</span>=<span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    attribute ID by which to group bed entries.</span></span><br><span class="line"><span class="string">    &#x27;gene_id&#x27; or &#x27;gene_name&#x27; for gene.bed6, gene_info</span></span><br><span class="line"><span class="string">    &#x27;transcript_id&#x27; for genome.bed12, exon, intron, transcrpt_info</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span>)</span><br><span class="line">    p.add_argument(<span class="string">&#x27;--type&#x27;</span>, dest=<span class="string">&#x27;feature&#x27;</span>, default=<span class="string">&#x27;exon&#x27;</span>, <span class="built_in">help</span>=<span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    annotation type to join, all others are filtered out:</span></span><br><span class="line"><span class="string">    &#x27;exon&#x27; genome.bed12, exon, intron, &#x27;gene&#x27; for gene.bed6, gene_info,</span></span><br><span class="line"><span class="string">    &#x27;transcript&#x27; for transcript_info.</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span>)</span><br><span class="line">    p.add_argument(<span class="string">&#x27;--format&#x27;</span>, dest=<span class="string">&#x27;outformat&#x27;</span>, default=<span class="string">&#x27;bed12&#x27;</span>, <span class="built_in">help</span>=<span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    choose output file format:bed12, bed6, intron, info</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span>)</span><br><span class="line">    args = p.parse_args()</span><br><span class="line">    main(args.gtf, args.attr, args.feature, args.outformat)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">如果你只需要把gtf转成bed12，下载ucsc的两个软件genePredToBed，gtfToGenePred一行代码就完事了。如果你想看看怎么用python实现它，可以看看这个。</summary>
    
    
    
    <category term="python" scheme="https://venuslee.vercel.app/categories/python/"/>
    
    
    <category term="原创" scheme="https://venuslee.vercel.app/tags/%E5%8E%9F%E5%88%9B/"/>
    
    <category term="生信" scheme="https://venuslee.vercel.app/tags/%E7%94%9F%E4%BF%A1/"/>
    
  </entry>
  
  <entry>
    <title>大幅度提升终端使用体验——zsh安装与配置</title>
    <link href="https://venuslee.vercel.app/2021/04/01/zsh%E9%85%8D%E7%BD%AE/"/>
    <id>https://venuslee.vercel.app/2021/04/01/zsh%E9%85%8D%E7%BD%AE/</id>
    <published>2021-04-01T14:46:39.000Z</published>
    <updated>2021-04-06T13:35:34.075Z</updated>
    
    <content type="html"><![CDATA[<h2 id="学习Linux从zsh的安装与配置开始"><a href="#学习Linux从zsh的安装与配置开始" class="headerlink" title="学习Linux从zsh的安装与配置开始"></a>学习Linux从zsh的安装与配置开始</h2><h3 id="1-安装zsh"><a href="#1-安装zsh" class="headerlink" title="1.安装zsh"></a>1.安装zsh</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install zsh  <span class="comment"># 以ubuntu为例</span></span><br></pre></td></tr></table></figure><p>或者<a href="http://zsh.sourceforge.net/Arc/source.html">通过源码安装</a></p><p>如果没有root权限，通过源码安装，下载解压之后：</p><ul><li>首先配置zsh，自定义安装路径</li></ul><p><code>./configure --prefix=$HOME/.local</code>  </p><ul><li>然后编译</li></ul><p><code>make -j4</code></p><ul><li>检查编译是否成功</li></ul><p><code>make check</code></p><ul><li>如果没有编译错误，则安装zsh</li></ul><p><code>make install -j4</code></p><h3 id="2-将zsh设置为默认shell"><a href="#2-将zsh设置为默认shell" class="headerlink" title="2.将zsh设置为默认shell"></a>2.将zsh设置为默认shell</h3><p>如果使用root权限安装的zsh，直接终端运行<code>chsh -s $(which zsh)</code>即可。</p><p>如果没有root权限，通过源码安装zsh的话，则解决方法是在每次打开终端时执行<code>exec &lt;zsh-path&gt;</code>来替代当前的shell。在文件<code>.bash_profile</code>中加入：</p><p><code>[ -f $HOME/.local/bin/zsh ] &amp;&amp; exec $HOME/.local/bin/zsh -l</code></p><p>如果上述两种方法都不能修改默认shell，安装 oh-my-zsh，安装时会自动切换shell成zsh。</p><h3 id="3-安装oh-my-zsh"><a href="#3-安装oh-my-zsh" class="headerlink" title="3.安装oh-my-zsh"></a>3.安装oh-my-zsh</h3><p>ArchLinux用户直接<code>yay -S oh-my-zsh-git</code>，然后<code>cp /usr/share/oh-my-zsh/zshrc ~/.zshrc</code>就完了。</p><div class="tabs" id="安装ohmyzsh"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#安装ohmyzsh-1">通过curl安装</button></li><li class="tab"><button type="button" data-href="#安装ohmyzsh-2">通过wget安装</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="安装ohmyzsh-1"><p><code>sh -c &quot;$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&quot;</code> </p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="安装ohmyzsh-2"><p><code>sh -c &quot;$(wget -O- https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&quot;</code> </p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><p>如果上述方法出现问题，可以按照下面的方法进行：</p><div class="tabs" id="git安装ohmyzsh"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#git安装ohmyzsh-1">通过git安装</button></li><li class="tab"><button type="button" data-href="#git安装ohmyzsh-2">通过gitee安装</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="git安装ohmyzsh-1"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~ &amp;&amp; \</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/ohmyzsh/ohmyzsh.git &amp;&amp; \</span><br><span class="line">mv ohmyzsh .oh-my-zsh &amp;&amp; \</span><br><span class="line">cp .oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="git安装ohmyzsh-2"><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd ~ &amp;&amp; \</span><br><span class="line">git clone https:&#x2F;&#x2F;gitee.com&#x2F;lu_x&#x2F;ohmyzsh.git &amp;&amp; \</span><br><span class="line">mv ohmyzsh .oh-my-zsh &amp;&amp; \</span><br><span class="line">cp .oh-my-zsh&#x2F;templates&#x2F;zshrc.zsh-template ~&#x2F;.zshrc</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="4-配置oh-my-zsh"><a href="#4-配置oh-my-zsh" class="headerlink" title="4.配置oh-my-zsh"></a>4.配置oh-my-zsh</h3><p>vim .zshrc，切换ZSH_THEME，可以在<a href="https://github.com/ohmyzsh/ohmyzsh/wiki/Themes">这里</a>预览。</p><p>想要隐藏用户名，<code>export DEFAULT_USER=&quot;&lt;user-name&gt;&quot;</code></p><h3 id="5-插件配置"><a href="#5-插件配置" class="headerlink" title="5.插件配置"></a>5.插件配置</h3><p>在.zshrc中找到plugins=(git)，其中加入以下插件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">plugins=(</span><br><span class="line">  git</span><br><span class="line">  extract  <span class="comment"># 一个命令 `x` 解压全部压缩文件</span></span><br><span class="line">  z  <span class="comment"># cd的加强版，到达任意到过的位置，模糊匹配</span></span><br><span class="line">  rand-quote  <span class="comment"># 随机名言，命令quote</span></span><br><span class="line">  gitignore  <span class="comment"># 提供一条 gi 命令，用来查询 gitignore 模板 gi python &gt; .gitignore</span></span><br><span class="line">  cp  <span class="comment"># 提供一个 cpv 命令，这个命令使用 rsync 实现带进度条的复制功能</span></span><br><span class="line">  vi-mode  <span class="comment"># vim输入模式</span></span><br><span class="line">  safe-paste  <span class="comment"># 往 zsh 粘贴脚本时，它不会被立刻运行</span></span><br><span class="line">  colored-man-pages  <span class="comment"># 给你带颜色的 man 命令</span></span><br><span class="line">  zsh-syntax-highlighting  <span class="comment"># 指令高亮</span></span><br><span class="line">  zsh-autosuggestions  <span class="comment"># 命令自动提示，方向键补全</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>其中插件zsh-syntax-highlighting和zsh-autosuggestions需要单独下载，方法如下：</p><div class="tabs" id="安装插件"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#安装插件-1">通过git安装</button></li><li class="tab"><button type="button" data-href="#安装插件-2">通过gitee安装</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="安装插件-1"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载zsh-syntax-highlighting</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/zsh-users/zsh-syntax-highlighting.git <span class="variable">$&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;</span>/plugins/zsh-syntax-highlighting</span><br><span class="line"><span class="comment"># 下载zsh-autosuggestions</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/zsh-users/zsh-autosuggestions.git <span class="variable">$&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;</span>/plugins/zsh-autosuggestions</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="安装插件-2"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载zsh-syntax-highlighting</span></span><br><span class="line">git <span class="built_in">clone</span> https://gitee.com/gulei666/zsh-syntax-highlighting.git <span class="variable">$&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;</span>/plugins/zsh-syntax-highlighting</span><br><span class="line"><span class="comment"># 下载zsh-autosuggestions</span></span><br><span class="line">git <span class="built_in">clone</span> https://gitee.com/githubClone/zsh-autosuggestions.git <span class="variable">$&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;</span>/plugins/zsh-autosuggestions</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="6-主题配置"><a href="#6-主题配置" class="headerlink" title="6.主题配置"></a>6.主题配置</h3><p>修改后的主题文件已经保存在github仓库,可直接下载使用：</p><p>下载<code>mytheme.zsh-theme.txt</code>，重命名<code>mytheme.zsh-theme</code>于<code>~/.oh-my-zsh/themes</code>，在<code>~/.zshrc</code>中声明<code>ZSH_THEME=&quot;mytheme&quot;</code>,然后<code>source ~/.zshrc</code></p><div class="tabs" id="下载主题"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#下载主题-1">通过git安装</button></li><li class="tab"><button type="button" data-href="#下载主题-2">通过gitee安装</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="下载主题-1"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/liqiming-whu/memorandum &amp;&amp; \</span><br><span class="line">cp memorandum/mytheme.zsh-theme.txt ~/.oh-my-zsh/themes/mytheme.zsh-theme &amp;&amp; \</span><br><span class="line">vim ~/.zshrc &amp;&amp; \</span><br><span class="line"><span class="built_in">source</span> ~/.zshrc</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="下载主题-2"><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;gitee.com&#x2F;liqiming_whu&#x2F;memorandum &amp;&amp; \</span><br><span class="line">cp memorandum&#x2F;mytheme.zsh-theme.txt ~&#x2F;.oh-my-zsh&#x2F;themes&#x2F;mytheme.zsh-theme &amp;&amp; \</span><br><span class="line">vim ~&#x2F;.zshrc &amp;&amp; \</span><br><span class="line">source ~&#x2F;.zshrc</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><hr><p>当然你也可以自行配置主题，以下是我自己的配置过程：</p><h3 id="7-自定义主题"><a href="#7-自定义主题" class="headerlink" title="7.自定义主题"></a>7.自定义主题</h3><p>默认的主题robbyrussel不显示用户名，自定义主题可以修改使其显示用户名</p><p>终端输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/.oh-my-zsh/themes</span><br><span class="line">vim robbyrussell.zsh-theme</span><br></pre></td></tr></table></figure><p>可以看到：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">local</span> ret_status=<span class="string">&quot;%(?:%&#123;<span class="variable">$fg_bold</span>[green]%&#125;➜ :%&#123;<span class="variable">$fg_bold</span>[red]%&#125;➜ )&quot;</span></span><br><span class="line">PROMPT=<span class="string">&#x27;$&#123;ret_status&#125; %&#123;$fg[cyan]%&#125;%c%&#123;$reset_color%&#125; $(git_prompt_info)&#x27;</span></span><br><span class="line"></span><br><span class="line">ZSH_THEME_GIT_PROMPT_PREFIX=<span class="string">&quot;%&#123;<span class="variable">$fg_bold</span>[blue]%&#125;git:(%&#123;<span class="variable">$fg</span>[red]%&#125;&quot;</span></span><br><span class="line">ZSH_THEME_GIT_PROMPT_SUFFIX=<span class="string">&quot;%&#123;<span class="variable">$reset_color</span>%&#125; &quot;</span></span><br><span class="line">ZSH_THEME_GIT_PROMPT_DIRTY=<span class="string">&quot;%&#123;<span class="variable">$fg</span>[blue]%&#125;) %&#123;<span class="variable">$fg</span>[yellow]%&#125;✗&quot;</span></span><br><span class="line">ZSH_THEME_GIT_PROMPT_CLEAN=<span class="string">&quot;%&#123;<span class="variable">$fg</span>[blue]%&#125;)&quot;</span></span><br></pre></td></tr></table></figure><p>PROMPT就是设置显示的用户名<br>​由于oh_my_zsh时常会有版本更新，为了避免我们修改的跟更新的版本有冲突，建议不要修改robbyrussell.zsh-theme，而是将其拷贝出来，命名为自己的主题文件，比如叫做mytheme.zsh-theme，然后只对mytheme-theme进行修改。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp robbyrussell.zsh-theme mytheme.zsh-theme</span><br></pre></td></tr></table></figure><p>修改后将 ~/.zshrc 中的<code>ZSH_THEME=&quot;robbyrussell&quot;</code>改为<code>ZSH_THEME=&quot;mytheme&quot;</code></p><h4 id="参考设置"><a href="#参考设置" class="headerlink" title="参考设置"></a>参考设置</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PROMPT=<span class="string">&#x27;%&#123;$fg[green]%&#125;%m@%&#123;$fg[magenta]%&#125;%(?..%?%1v)%n:%&#123;$reset_color%&#125;%&#123;$fg[cyan]%&#125;%~#&#x27;</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PROMPT=<span class="string">&#x27;%&#123;$fg_bold[red]%&#125;-&gt; %&#123;$fg_bold[green]%&#125;%p%&#123;$fg[cyan]%&#125;%d %&#123;$fg_bold[blue]%&#125;$(git_prompt_info)%&#123;$fg_bold[blue]%&#125;% %&#123;$reset_color%&#125;~#:&#x27;</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PROMPT=<span class="string">&#x27;%&#123;$fg_bold[red]%&#125;-&gt; %&#123;$fg_bold[green]%&#125;%p%&#123;$fg[cyan]%&#125;%d %&#123;$fg_bold[blue]%&#125;$(git_prompt_info)%&#123;$fg_bold[blue]%&#125;% %&#123;$fg[magenta]%&#125;%(?..%?%1v)%&#123;$reset_color%&#125;~#: &#x27;</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PROMPT=<span class="string">&#x27;%&#123;$fg_bold[red]%&#125;-&gt; %&#123;$fg_bold[magenta]%&#125;%n%&#123;$fg_bold[cyan]%&#125;@%&#123;$fg[green]%&#125;%m %&#123;$fg_bold[green]%&#125;%p%&#123;$fg[cyan]%&#125;%~ %&#123;$fg_bold[blue]%&#125;$(git_prompt_info)%&#123;$fg_bold[blue]%&#125;% %&#123;$fg[magenta]%&#125;%(?..%?%1v)%&#123;$fg_bold[blue]%&#125;? %&#123;$fg[yellow]%&#125;# &#x27;</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">%T 系统时间（时：分)</span><br><span class="line">%* 系统时间（时：分：秒）</span><br><span class="line">%D 系统日期（年-月-日）</span><br><span class="line">%n 你的用户名</span><br><span class="line">%B - %b 开始到结束使用粗体打印</span><br><span class="line">%U - %u 开始到结束使用下划线打印</span><br><span class="line">%d 你目前的工作目录</span><br><span class="line">%~ 你目前的工作目录相对于～的相对路径</span><br><span class="line">%M 计算机的主机名</span><br><span class="line">%m 计算机的主机名（在第一个句号之前截断）</span><br><span class="line">%l 你当前的tty</span><br><span class="line">%n 登录名</span><br></pre></td></tr></table></figure><h4 id="修改mytheme-zsh-theme文件"><a href="#修改mytheme-zsh-theme文件" class="headerlink" title="修改mytheme.zsh-theme文件"></a>修改mytheme.zsh-theme文件</h4><p>修改这一行：</p><p><code>PROMPT=&#39;$&#123;ret_status&#125;%&#123;$fg[magenta]%&#125;%n@%&#123;$fg[green]%&#125;%m %&#123;$fg[cyan]%&#125;%c%&#123;$reset_color%&#125; $(git_prompt_info)&#39;</code></p><p>文件全部内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">local</span> ret_status=<span class="string">&quot;%(?:%&#123;<span class="variable">$fg_bold</span>[green]%&#125;➜ :%&#123;<span class="variable">$fg_bold</span>[red]%&#125;➜ )&quot;</span></span><br><span class="line">PROMPT=<span class="string">&#x27;$&#123;ret_status&#125;%&#123;$fg[magenta]%&#125;%n@%&#123;$fg[green]%&#125;%m %&#123;$fg[cyan]%&#125;%c%&#123;$reset_color%&#125; $(git_prompt_info)&#x27;</span></span><br><span class="line">ZSH_THEME_GIT_PROMPT_PREFIX=<span class="string">&quot;%&#123;<span class="variable">$fg_bold</span>[blue]%&#125;git:(%&#123;<span class="variable">$fg</span>[red]%&#125;&quot;</span></span><br><span class="line">ZSH_THEME_GIT_PROMPT_SUFFIX=<span class="string">&quot;%&#123;<span class="variable">$reset_color</span>%&#125; &quot;</span></span><br><span class="line">ZSH_THEME_GIT_PROMPT_DIRTY=<span class="string">&quot;%&#123;<span class="variable">$fg</span>[blue]%&#125;) %&#123;<span class="variable">$fg</span>[yellow]%&#125;✗&quot;</span></span><br><span class="line">ZSH_THEME_GIT_PROMPT_CLEAN=<span class="string">&quot;%&#123;<span class="variable">$fg</span>[blue]%&#125;)&quot;</span></span><br></pre></td></tr></table></figure><h3 id="8-随机主题"><a href="#8-随机主题" class="headerlink" title="8.随机主题"></a>8.随机主题</h3><p>在 <code>~/.zshrc</code> 文件中设置主题为 <code>random</code> 即可开启随机主题，每次打开新的终端的时候，zsh 都会随机使用一个主题。</p><p><code>ZSH_THEME=&quot;random&quot;</code></p>]]></content>
    
    
    <summary type="html">如果你没用过zsh，那么你需要这篇文章，如果你没用过oh-my-zsh，那你更需要这篇文章。如果你不用oh-my-zsh，那没事了。</summary>
    
    
    
    <category term="linux" scheme="https://venuslee.vercel.app/categories/linux/"/>
    
    
    <category term="原创" scheme="https://venuslee.vercel.app/tags/%E5%8E%9F%E5%88%9B/"/>
    
  </entry>
  
  <entry>
    <title>配置你的vim，让它成为能用的编辑器</title>
    <link href="https://venuslee.vercel.app/2021/03/31/vim%E9%85%8D%E7%BD%AE/"/>
    <id>https://venuslee.vercel.app/2021/03/31/vim%E9%85%8D%E7%BD%AE/</id>
    <published>2021-03-30T18:16:29.000Z</published>
    <updated>2021-04-06T13:34:48.655Z</updated>
    
    <content type="html"><![CDATA[<h2 id="学习Linux，从vim配置开始："><a href="#学习Linux，从vim配置开始：" class="headerlink" title="学习Linux，从vim配置开始："></a>学习Linux，从vim配置开始：</h2><p><del>不会真有人不配置就用vim吧，不会吧</del></p><h3 id="1-使用vim-plug管理vim插件"><a href="#1-使用vim-plug管理vim插件" class="headerlink" title="1.使用vim-plug管理vim插件"></a>1.使用vim-plug管理vim插件</h3><p>把vim-plug安装在~/.vim/autoload/</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fLo ~/.vim/<span class="built_in">autoload</span>/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim</span><br></pre></td></tr></table></figure><p>由于github处于骑墙状态有时候没法连接，所以：</p><div class="tabs" id="安装vim-plug"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#安装vim-plug-1">通过git安装</button></li><li class="tab"><button type="button" data-href="#安装vim-plug-2">通过gitee安装</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="安装vim-plug-1"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/junegunn/vim-plug &amp;&amp; \</span><br><span class="line">mkdir -p ~/.vim/<span class="built_in">autoload</span> &amp;&amp; \</span><br><span class="line">cp vim-plug/plug.vim ~/.vim/<span class="built_in">autoload</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="安装vim-plug-2"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://gitee.com/chenxinliang123/vim-plug &amp;&amp; \</span><br><span class="line">mkdir -p ~/.vim/<span class="built_in">autoload</span> &amp;&amp; \</span><br><span class="line">cp vim-plug/plug.vim ~/.vim/<span class="built_in">autoload</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="2-重命名vimrc-txt为-vimrc于"><a href="#2-重命名vimrc-txt为-vimrc于" class="headerlink" title="2.重命名vimrc.txt为.vimrc于~/"></a>2.重命名vimrc.txt为.vimrc于~/</h3><p>这里可以clone我的配置：</p><div class="tabs" id="下载配文件"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#下载配文件-1">通过git</button></li><li class="tab"><button type="button" data-href="#下载配文件-2">通过gitee</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="下载配文件-1"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/liqiming-whu/memorandum &amp;&amp; \</span><br><span class="line">cp memorandum/vimrc.txt ~/.vimrc</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="下载配文件-2"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://gitee.com/liqiming_whu/memorandum &amp;&amp; \</span><br><span class="line">cp memorandum/vimrc.txt ~/.vimrc</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="3-安装插件"><a href="#3-安装插件" class="headerlink" title="3.安装插件"></a>3.安装插件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim:</span></span><br><span class="line">:PlugStatus <span class="comment"># 查看插件信息</span></span><br><span class="line">:PlugInstall <span class="comment"># 安装插件，首先在.vimrc中声明</span></span><br><span class="line">:PlugClean <span class="comment"># 卸载插件，首先在.vimrc中删除</span></span><br><span class="line">:PlugUpgrade <span class="comment"># 升级</span></span><br></pre></td></tr></table></figure><h3 id="4-安装依赖"><a href="#4-安装依赖" class="headerlink" title="4.安装依赖"></a>4.安装依赖</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install universal-ctags nodejs clangd</span><br><span class="line">sudo pip install flake8</span><br></pre></td></tr></table></figure><h3 id="5-安装yarn"><a href="#5-安装yarn" class="headerlink" title="5.安装yarn"></a>5.安装yarn</h3><p>去yarn官网查看<a href="https://yarn.bootcss.com/docs/install/#debian-stable">安装说明</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># archlinux:</span></span><br><span class="line">sudo pacman -S yarn</span><br><span class="line"><span class="comment"># ubuntu:</span></span><br><span class="line">curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;deb https://dl.yarnpkg.com/debian/ stable main&quot;</span> | sudo tee /etc/apt/sources.list.d/yarn.list</span><br><span class="line">sudo apt update &amp;&amp; sudo apt install yarn</span><br><span class="line"><span class="comment"># 如果报错，执行以下命令后重新安装(wsl-ubuntu18.04好像会报错)</span></span><br><span class="line">sudo apt remove cmdtest</span><br><span class="line">sudo apt remove gpg</span><br><span class="line">sudo apt install gnupg1</span><br></pre></td></tr></table></figure><h3 id="6-安装主题配色"><a href="#6-安装主题配色" class="headerlink" title="6.安装主题配色"></a>6.安装主题配色</h3><p>我们要把主题配色复制到指定位置才能生效。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir ~/.vim/colors</span><br><span class="line">cp ~/.vim/plugged/onedark.vim/colors/onedark.vim ~/.vim/colors</span><br><span class="line">cp ~/.vim/plugged/onedark.vim/<span class="built_in">autoload</span>/onedark.vim ~/.vim/<span class="built_in">autoload</span></span><br></pre></td></tr></table></figure><h3 id="7-复制-vimrc-vim-config至-root"><a href="#7-复制-vimrc-vim-config至-root" class="headerlink" title="7.复制.vimrc, .vim, .config至/root"></a>7.复制.vimrc, .vim, .config至/root</h3><p>为了让root也可以使用vim配置，直接粗暴的复制过去就完了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo cp ~/.vimrc  /root</span><br><span class="line">sudo cp -r ~/.vim  /root</span><br><span class="line">sudo cp -r ~/.config  /root</span><br></pre></td></tr></table></figure><hr><h3 id="8-我的-vimrc文件"><a href="#8-我的-vimrc文件" class="headerlink" title="8.我的.vimrc文件"></a>8.我的.vimrc文件</h3><p>需要vim &gt; 8.0才能用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br></pre></td><td class="code"><pre><span class="line">&quot; vim plug插件管理</span><br><span class="line">call plug#begin(&#39;~&#x2F;.vim&#x2F;plugged&#39;)</span><br><span class="line"></span><br><span class="line">Plug &#39;joshdick&#x2F;onedark.vim&#39; &quot; 配色方案</span><br><span class="line">colorscheme onedark</span><br><span class="line">&quot; 安装:</span><br><span class="line">&quot; mkdir ~&#x2F;.vim&#x2F;colors</span><br><span class="line">&quot; cp ~&#x2F;.vim&#x2F;plugged&#x2F;onedark.vim&#x2F;colors&#x2F;onedark.vim ~&#x2F;.vim&#x2F;colors</span><br><span class="line">&quot; cp ~&#x2F;.vim&#x2F;plugged&#x2F;onedark.vim&#x2F;autoload&#x2F;onedark.vim ~&#x2F;.vim&#x2F;autoload</span><br><span class="line"></span><br><span class="line">Plug &#39;vim-airline&#x2F;vim-airline&#39; &quot; 状态栏</span><br><span class="line">Plug &#39;vim-airline&#x2F;vim-airline-themes&#39; &quot; 状态栏主题</span><br><span class="line">let g:airline_theme&#x3D;&#39;onedark&#39;</span><br><span class="line"></span><br><span class="line">&quot; Plug &#39;Yggdroot&#x2F;indentLine&#39; &quot; 缩进标线,开启后不方便复制</span><br><span class="line">&quot; let g:indentLine_color_term &#x3D; 239</span><br><span class="line">&quot; let g:indentLine_char_list &#x3D; [&#39;|&#39;, &#39;¦&#39;, &#39;┆&#39;, &#39;┊&#39;]</span><br><span class="line"></span><br><span class="line">Plug &#39;preservim&#x2F;nerdtree&#39; &quot; 文件管理器 F2</span><br><span class="line">&quot; autocmd vimenter * NERDTree &quot; 打开文件自动打开HERDTree,建议关闭</span><br><span class="line">autocmd StdinReadPre * let s:std_in&#x3D;1</span><br><span class="line">autocmd VimEnter * if argc() &#x3D;&#x3D; 0 &amp;&amp; !exists(&quot;s:std_in&quot;) | NERDTree | endif</span><br><span class="line">autocmd StdinReadPre * let s:std_in&#x3D;1</span><br><span class="line">autocmd VimEnter * if argc() &#x3D;&#x3D; 1 &amp;&amp; isdirectory(argv()[0]) &amp;&amp;</span><br><span class="line">    \ !exists(&quot;s:std_in&quot;) | exe &#39;NERDTree&#39; argv()[0] | wincmd p | ene | endif</span><br><span class="line">map &lt;F2&gt; :NERDTreeToggle&lt;CR&gt;</span><br><span class="line">autocmd bufenter * if (winnr(&quot;$&quot;) &#x3D;&#x3D; 1 &amp;&amp; exists(&quot;b:NERDTree&quot;) &amp;&amp;</span><br><span class="line">    \ b:NERDTree.isTabTree()) | q | endif</span><br><span class="line">&quot; 上面我们设置了自动打开NERDTree，(直接输入vim会打开NERDTree)，打开一个目录也</span><br><span class="line">&quot; 会打开NERDTree，当文件都关闭只有NERDTree时自动退出。</span><br><span class="line">&quot; 设置快捷键F2来自由切换打开或者关闭NERDTree。</span><br><span class="line">Plug &#39;Yggdroot&#x2F;LeaderF&#39;, &#123; &#39;do&#39;: &#39;.&#x2F;install.sh&#39; &#125; &quot; 需要安装universal-ctags</span><br><span class="line">noremap &lt;F3&gt; :LeaderfFunction!&lt;CR&gt;</span><br><span class="line">let g:Lf_HideHelp &#x3D; 1</span><br><span class="line">let g:Lf_UseCache &#x3D; 0</span><br><span class="line">let g:Lf_UseVersionControlTool &#x3D; 0</span><br><span class="line">let g:Lf_IgnoreCurrentBufferName &#x3D; 1</span><br><span class="line">let g:Lf_WindowPosition &#x3D; &#39;popup&#39; &quot; vim &gt;&#x3D;8.1</span><br><span class="line">let g:Lf_WindowPosition &#x3D; &#39;popup&#39; &quot; vim &gt;&#x3D;8.1</span><br><span class="line">let g:Lf_PreviewResult &#x3D; &#123;&#39;Function&#39;:0, &#39;BufTag&#39;: 0&#125;</span><br><span class="line"></span><br><span class="line">Plug &#39;neoclide&#x2F;coc.nvim&#39;, &#123;&#39;branch&#39;: &#39;release&#39;&#125; &quot; 补全插件 vim &gt; 8.1</span><br><span class="line">let g:coc_global_extensions &#x3D; [&#39;coc-json&#39;, &#39;coc-clangd&#39;, &#39;coc-cmake&#39;,</span><br><span class="line">    \ &#39;coc-css&#39;, &#39;coc-java&#39;, &#39;coc-python&#39;, &#39;coc-snippets&#39;, &#39;coc-xml&#39;,</span><br><span class="line">    \ &#39;coc-markdownlint&#39;,&#39;coc-highlight&#39;]</span><br><span class="line">&quot; :CocInstall coc-json coc-css 安装插件</span><br><span class="line">&quot; :CocUninstall coc-css 卸载插件</span><br><span class="line">&quot; :CocList extensions 插件列表</span><br><span class="line"></span><br><span class="line">Plug &#39;hrp&#x2F;EnhancedCommentify&#39; &quot; 注释，快捷键&lt;leader&gt;x, &lt;leader&gt;c</span><br><span class="line">let g:EnhCommentifyRespectIndent &#x3D; &#39;Yes&#39;</span><br><span class="line">let g:EnhCommentifyPretty &#x3D; &#39;Yes&#39;</span><br><span class="line"></span><br><span class="line">Plug &#39;luochen1990&#x2F;rainbow&#39; &quot; 彩虹括号</span><br><span class="line">let g:rainbow_active &#x3D; 1</span><br><span class="line"></span><br><span class="line">Plug &#39;Raimondi&#x2F;delimitMate&#39; &quot; 补全括号</span><br><span class="line">au FileType python let b:delimitMate_nesting_quotes &#x3D; [&#39;&quot;&#39;]</span><br><span class="line"></span><br><span class="line">Plug &#39;docunext&#x2F;closetag.vim&#39; &quot; 补全 HTML&#x2F;XML 标签</span><br><span class="line">let g:closetag_html_style&#x3D;1</span><br><span class="line"></span><br><span class="line">&quot; Plug &#39;dense-analysis&#x2F;ale&#39; &quot; 代码检测 vim &gt; 8.0</span><br><span class="line">&quot; 需要代码检测工具的支持：pip install flake8</span><br><span class="line">&quot; let &amp;runtimepath.&#x3D;&#39;,~&#x2F;.vim&#x2F;plugged&#x2F;ale&#39;</span><br><span class="line">&quot; let g:ale_sign_column_always &#x3D; 0 &quot; 一般需要实时检查，默认关闭</span><br><span class="line">&quot; let g:ale_lint_on_save &#x3D; 1 &quot; save file auto check</span><br><span class="line">&quot; let g:ale_lint_on_text_changed &#x3D; 0 &quot; for ale_lint_on_save &#x3D; 1</span><br><span class="line">&quot; let g:ale_lint_on_enter &#x3D; 0 &quot; for ale_lint_on_save &#x3D; 1</span><br><span class="line">&quot; map &lt;F5&gt; :ALEToggle \| echo &#39;g:ale_enabled &#x3D;&#39; g:ale_enabled&lt;CR&gt;</span><br><span class="line">&quot; F5开启&#x2F;关闭静态检测</span><br><span class="line">&quot; let g:ale_echo_msg_error_str &#x3D; &#39;Error&#39;</span><br><span class="line">&quot; let g:ale_echo_msg_warning_str &#x3D; &#39;Warning&#39;</span><br><span class="line">&quot; let g:ale_echo_msg_format &#x3D; &#39;[%linter%] %s [%severity%]&#39;</span><br><span class="line"></span><br><span class="line">call plug#end()</span><br><span class="line"></span><br><span class="line">filetype plugin indent on</span><br><span class="line">syntax enable</span><br><span class="line">syntax on</span><br><span class="line"></span><br><span class="line">&quot; When vimrc is edited, reload it</span><br><span class="line">autocmd! BufWritePost ~&#x2F;.vimrc source ~&#x2F;.vimrc</span><br><span class="line"></span><br><span class="line">&quot; 首先设置 mapleader，后面键盘映射随时要用</span><br><span class="line">&quot; 基本上所有自定义的快捷键都以这个字符打头，比如映射&#96;,w&#96;为&#96;:w&#96;</span><br><span class="line">let mapleader &#x3D; &quot;,&quot;</span><br><span class="line">let g:mapleader &#x3D; &quot;,&quot;</span><br><span class="line"></span><br><span class="line">&quot; 不兼容 Vi，最大限度使用新特性</span><br><span class="line">set nocompatible</span><br><span class="line"></span><br><span class="line">&quot; 写入文件时，不做备份</span><br><span class="line">set nobackup</span><br><span class="line">set nowritebackup</span><br><span class="line"></span><br><span class="line">&quot; 不用交换文件</span><br><span class="line">set noswapfile</span><br><span class="line"></span><br><span class="line">&quot; 保存文件的快捷键</span><br><span class="line">nmap &lt;leader&gt;w :w!&lt;CR&gt;</span><br><span class="line">nmap &lt;leader&gt;q :q!&lt;CR&gt;</span><br><span class="line"></span><br><span class="line">&quot; 移除 Windows 文件结尾的 &#96;^M&#96;</span><br><span class="line">noremap &lt;leader&gt;m :%s&#x2F;&lt;C-V&gt;&lt;C-M&gt;&#x2F;&#x2F;ge&lt;CR&gt;</span><br><span class="line"></span><br><span class="line">&quot; 重新打开文件时，恢复上一次游标位置</span><br><span class="line">set viewoptions&#x3D;cursor  &quot; 只记住游标</span><br><span class="line">au BufWinLeave ?* mkview</span><br><span class="line">au VimEnter ?* silent loadview</span><br><span class="line"></span><br><span class="line">&quot; 检测文件编码时，优先考虑 UTF-8</span><br><span class="line">set fileencodings&#x3D;utf-8,gb2312,gb18030,gbk,ucs-bom,cp936,big5,latin1</span><br><span class="line">set enc&#x3D;utf8</span><br><span class="line">set fencs&#x3D;utf8,gbk,gb2312,gb18030</span><br><span class="line">&quot; 不同平台，设置不同的行尾符，即 EOL</span><br><span class="line">&quot; 注意：在 Mac 平台，也是 unix 优先；自 OS X 始，行尾符与 Unix 一致，</span><br><span class="line">&quot;      都是 &#96;\n&#96; 而不是 &#96;\r&#96;</span><br><span class="line">if has(&quot;win32&quot;)</span><br><span class="line">    set fileformats&#x3D;dos,unix,mac</span><br><span class="line">else</span><br><span class="line">    set fileformats&#x3D;unix,mac,dos</span><br><span class="line">endif</span><br><span class="line"></span><br><span class="line">&quot; 在断行、合并(join)行时，针对多字节字符（比如中文）的优化处理</span><br><span class="line">set formatoptions+&#x3D;mM</span><br><span class="line"></span><br><span class="line">&quot; 采用 C 风格的缩进，适用于大多数语言</span><br><span class="line">&quot; 细节调整见下面的 &#96;cinoptions&#96;</span><br><span class="line">&quot; 你也可以尝试 smartindent 和 autoindent</span><br><span class="line">set cindent</span><br><span class="line"></span><br><span class="line">&quot; 细节调整，主要为了适应 Google C++ Style</span><br><span class="line">&quot; t0: 函数返回类型声明不缩进</span><br><span class="line">&quot; g0: C++ &quot;public:&quot; 等声明缩进一个字符</span><br><span class="line">&quot; h1: C++ &quot;public:&quot; 等声明后面的语句缩进一个字符</span><br><span class="line">&quot; N-s: C++ namespace 里不缩进</span><br><span class="line">&quot; j1: 合理的缩进 Java 或 C++ 的匿名函数，应该也适用于 JS</span><br><span class="line">set cinoptions&#x3D;t0,g1,h1,N-s,j1</span><br><span class="line"></span><br><span class="line">&quot; 让制表符智能一些</span><br><span class="line">set smarttab</span><br><span class="line">&quot; 先设置缺省情况，然后根据不同文件类型再次重新设置</span><br><span class="line">set expandtab | set tabstop&#x3D;4 | set shiftwidth&#x3D;4  &quot; Python, CSS, etc.</span><br><span class="line"></span><br><span class="line">&quot; 对 C&#x2F;C++ 等，制表符和缩进都是两个空格</span><br><span class="line">au FileType c,cpp,html,htmldjango,lua,javascript,nsis</span><br><span class="line">    \ set expandtab | set tabstop&#x3D;2 | set shiftwidth&#x3D;2</span><br><span class="line"></span><br><span class="line">&quot; Makefile 必须保留制表符，且习惯上占八个空格</span><br><span class="line">au FileType make set noexpandtab | set tabstop&#x3D;8 | set shiftwidth&#x3D;8</span><br><span class="line"></span><br><span class="line">&quot; 对 C&#x2F;C++&#x2F;Python&#x2F;Vim 80列限制</span><br><span class="line">au FileType c,cpp,python,vim set textwidth&#x3D;79 | set colorcolumn&#x3D;80</span><br><span class="line">&quot; 设定了宽度限制，画一条竖线以警示</span><br><span class="line"></span><br><span class="line">&quot; 通常代码不需折行，前面有些语言设置了宽度限制就更不需要了。</span><br><span class="line">&quot; 实际操作下来，纯文本、Markdown、XML 等比较需要折行，因为它们常常一行太长了</span><br><span class="line">au FileType text,markdown,html,xml set wrap</span><br><span class="line">&quot; 折行时，以单词为界，以免切断单词</span><br><span class="line">set linebreak</span><br><span class="line">&quot; 折行后的后续行，使用与第一行相同的缩进</span><br><span class="line">set breakindent  &quot; vim &gt; 8.0</span><br><span class="line"></span><br><span class="line">&quot; 即使在终端，也尽量启用鼠标(设置此项后不能右键粘贴，所以注释掉了）</span><br><span class="line">&quot; if has(&quot;mouse&quot;) | set mouse&#x3D;a | endif</span><br><span class="line"></span><br><span class="line">&quot; 显示输入中的命令，对 gqq&#x2F;gcc 这种多个字符的命令特别有用</span><br><span class="line">set showcmd</span><br><span class="line">&quot; 下面几个不解释，自行查看帮助</span><br><span class="line">set scrolloff&#x3D;7</span><br><span class="line">set wildmenu</span><br><span class="line">set wildmode&#x3D;&quot;list:longest&quot;</span><br><span class="line">set ruler</span><br><span class="line">&quot; 命令行高度为两行</span><br><span class="line">set cmdheight&#x3D;2</span><br><span class="line"></span><br><span class="line">&quot; 显示行号</span><br><span class="line">set number</span><br><span class="line">&quot; 为方便复制，用&lt;F6&gt;开启&#x2F;关闭行号显示:</span><br><span class="line">nnoremap &lt;F6&gt; :set nonumber!&lt;CR&gt;:set foldcolumn&#x3D;0&lt;CR&gt;</span><br><span class="line">set lazyredraw</span><br><span class="line">&quot; 切换缓存时不用保存</span><br><span class="line">set hidden</span><br><span class="line">&quot; 输入模式下，退格键可以退一切字符</span><br><span class="line">set backspace&#x3D;eol,start,indent</span><br><span class="line">set whichwrap+&#x3D;&lt;,&gt;,h,l</span><br><span class="line"></span><br><span class="line">set cursorline  &quot; 光标横线</span><br><span class="line">set cursorcolumn  &quot; 光标竖线</span><br><span class="line"></span><br><span class="line">&quot; 高亮不想要的空格，比如行尾</span><br><span class="line">&quot; See [http:&#x2F;&#x2F;vim.wikia.com&#x2F;wiki&#x2F;Highlight_unwanted_spaces]</span><br><span class="line">highlight ExtraWhitespace ctermbg&#x3D;red guibg&#x3D;red</span><br><span class="line">match ExtraWhitespace &#x2F;\s\+$&#x2F;</span><br><span class="line">autocmd BufWinEnter * match ExtraWhitespace &#x2F;\s\+$&#x2F;</span><br><span class="line">autocmd InsertEnter * match ExtraWhitespace &#x2F;\s\+\%#\@&lt;!$&#x2F;</span><br><span class="line">autocmd InsertLeave * match ExtraWhitespace &#x2F;\s\+$&#x2F;</span><br><span class="line">autocmd BufWinLeave * call clearmatches() &quot; for performance</span><br><span class="line"></span><br><span class="line">&quot; 搜索时忽略大小写（incsearch)，如果搜索模式里有大写字母，就不再忽略大小写（smartcase）</span><br><span class="line">set ignorecase</span><br><span class="line">set smartcase</span><br><span class="line">&quot; 即时显示匹配结果（incsearch），并高亮所有结果（hlsearch）</span><br><span class="line">set incsearch</span><br><span class="line">set hlsearch</span><br><span class="line">map &lt;silent&gt; &lt;leader&gt;&lt;CR&gt; :nohlsearch&lt;CR&gt;</span><br><span class="line"></span><br><span class="line">&quot; 替换时，缺省启用g标志，即，同一行里的所有匹配都会被替换</span><br><span class="line">set gdefault</span><br><span class="line"></span><br><span class="line">&quot; 设置粘贴模式快捷建</span><br><span class="line">set pastetoggle&#x3D;&lt;F7&gt;</span><br></pre></td></tr></table></figure><p>另有vim7可用版本，软件版本比较旧的服务器可用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br></pre></td><td class="code"><pre><span class="line">call plug#begin(&#39;~&#x2F;.vim&#x2F;plugged&#39;)</span><br><span class="line"></span><br><span class="line">Plug &#39;joshdick&#x2F;onedark.vim&#39;</span><br><span class="line">colorscheme onedark</span><br><span class="line">&quot; mkdir ~&#x2F;.vim&#x2F;colors</span><br><span class="line">&quot; cp ~&#x2F;.vim&#x2F;plugged&#x2F;onedark.vim&#x2F;colors&#x2F;onedark.vim ~&#x2F;.vim&#x2F;colors</span><br><span class="line">&quot; cp ~&#x2F;.vim&#x2F;plugged&#x2F;onedark.vim&#x2F;autoload&#x2F;onedark.vim ~&#x2F;.vim&#x2F;autoload</span><br><span class="line"></span><br><span class="line">Plug &#39;vim-airline&#x2F;vim-airline&#39;</span><br><span class="line">Plug &#39;vim-airline&#x2F;vim-airline-themes&#39;</span><br><span class="line">let g:airline_theme&#x3D;&#39;onedark&#39;</span><br><span class="line"></span><br><span class="line">&quot; Plug &#39;Yggdroot&#x2F;indentLine&#39;</span><br><span class="line">&quot; let g:indentLine_color_term &#x3D; 239</span><br><span class="line">&quot; let g:indentLine_char_list &#x3D; [&#39;|&#39;, &#39;¦&#39;, &#39;┆ &#39;, &#39;┊ &#39;]</span><br><span class="line"></span><br><span class="line">Plug &#39;preservim&#x2F;nerdtree&#x2F;&#39;</span><br><span class="line">&quot; autocmd vimenter * NERDTree</span><br><span class="line">autocmd StdinReadPre * let s:std_in&#x3D;1</span><br><span class="line">autocmd VimEnter * if argc() &#x3D;&#x3D; 0 &amp;&amp; !exists(&quot;s:std_in&quot;) | NERDTree | endif</span><br><span class="line">autocmd StdinReadPre * let s:std_in&#x3D;1</span><br><span class="line">autocmd VimEnter * if argc() &#x3D;&#x3D; 1 &amp;&amp; isdirectory(argv()[0]) &amp;&amp;</span><br><span class="line">    \ !exists(&quot;s:std_in&quot;) | exe &#39;NERDTree&#39; argv()[0] | wincmd p | ene | endif</span><br><span class="line">map &lt;F2&gt; :NERDTreeToggle&lt;CR&gt;</span><br><span class="line">autocmd bufenter * if (winnr(&quot;$&quot;) &#x3D;&#x3D; 1 &amp;&amp; exists(&quot;b:NERDTree&quot;) &amp;&amp;</span><br><span class="line">    \ b:NERDTree.isTabTree()) | q | endif</span><br><span class="line"></span><br><span class="line">Plug &#39;hrp&#x2F;EnhancedCommentify&#39;</span><br><span class="line">let g:EnhCommentifyRespectIndent &#x3D; &#39;Yes&#39;</span><br><span class="line">let g:EnhCommentifyPretty &#x3D; &#39;Yes&#39;</span><br><span class="line"></span><br><span class="line">Plug &#39;luochen1990&#x2F;rainbow&#39;</span><br><span class="line">let g:rainbow_active &#x3D; 1</span><br><span class="line"></span><br><span class="line">Plug &#39;Raimondi&#x2F;delimitMate&#39;</span><br><span class="line">au FileType python let b:delimitMate_nesting_quotes &#x3D; [&#39;&quot;&#39;]</span><br><span class="line"></span><br><span class="line">Plug &#39;docunext&#x2F;closetag.vim&#39;</span><br><span class="line">let g:closetag_html_style&#x3D;1</span><br><span class="line"></span><br><span class="line">call plug#end()</span><br><span class="line"></span><br><span class="line">filetype plugin indent on</span><br><span class="line">syntax enable</span><br><span class="line">syntax on</span><br><span class="line"></span><br><span class="line">autocmd! BufWritePost ~&#x2F;.vimrc source ~&#x2F;.vimrc</span><br><span class="line"></span><br><span class="line">let mapleader &#x3D; &quot;,&quot;</span><br><span class="line">let g:mapleader &#x3D; &quot;,&quot;</span><br><span class="line"></span><br><span class="line">set nocompatible</span><br><span class="line"></span><br><span class="line">set nobackup</span><br><span class="line">set nowritebackup</span><br><span class="line"></span><br><span class="line">set noswapfile</span><br><span class="line"></span><br><span class="line">nmap &lt;leader&gt;w :w!&lt;CR&gt;</span><br><span class="line">nmap &lt;leader&gt;q :q!&lt;CR&gt;</span><br><span class="line"></span><br><span class="line">noremap &lt;leader&gt;m :%s&#x2F;&lt;C-V&gt;&lt;C-M&gt;&#x2F;&#x2F;ge&lt;CR&gt;</span><br><span class="line"></span><br><span class="line">set viewoptions&#x3D;cursor</span><br><span class="line">au BufWinLeave ?* mkview</span><br><span class="line">au VimEnter ?* silent loadview</span><br><span class="line"></span><br><span class="line">set fileencodings&#x3D;utf-8</span><br><span class="line">set enc&#x3D;utf8</span><br><span class="line">set fencs&#x3D;utf8</span><br><span class="line"></span><br><span class="line">set fileformats&#x3D;unix,mac,dos</span><br><span class="line"></span><br><span class="line">set formatoptions+&#x3D;mM</span><br><span class="line"></span><br><span class="line">set cindent</span><br><span class="line"></span><br><span class="line">set smarttab</span><br><span class="line">set expandtab | set tabstop&#x3D;4 | set shiftwidth&#x3D;4</span><br><span class="line"></span><br><span class="line">au FileType c,cpp,html,htmldjango,lua,javascript,nsis</span><br><span class="line">    \ set expandtab | set tabstop&#x3D;2 | set shiftwidth&#x3D;2</span><br><span class="line"></span><br><span class="line">au FileType make set noexpandtab | set tabstop&#x3D;8 | set shiftwidth&#x3D;8</span><br><span class="line"></span><br><span class="line">au FileType c,cpp,python,vim set textwidth&#x3D;79 | set colorcolumn&#x3D;80</span><br><span class="line"></span><br><span class="line">au FileType text,markdown,html,xml set wrap</span><br><span class="line">set linebreak</span><br><span class="line">&quot; set breakindent</span><br><span class="line"></span><br><span class="line">set showcmd</span><br><span class="line">set scrolloff&#x3D;7</span><br><span class="line">set wildmenu</span><br><span class="line">set wildmode&#x3D;&quot;list:longest&quot;</span><br><span class="line">set ruler</span><br><span class="line">set cmdheight&#x3D;2</span><br><span class="line"></span><br><span class="line">set cursorline</span><br><span class="line">set cursorcolumn</span><br><span class="line"></span><br><span class="line">set number</span><br><span class="line">nnoremap &lt;F6&gt; :set nonumber!&lt;CR&gt;:set foldcolumn&#x3D;0&lt;CR&gt;</span><br><span class="line">set lazyredraw</span><br><span class="line">set hidden</span><br><span class="line">set backspace&#x3D;eol,start,indent</span><br><span class="line">set whichwrap+&#x3D;&lt;,&gt;,h,l</span><br><span class="line"></span><br><span class="line">highlight ExtraWhitespace ctermbg&#x3D;red guibg&#x3D;red</span><br><span class="line">match ExtraWhitespace &#x2F;\s\+$&#x2F;</span><br><span class="line">autocmd BufWinEnter * match ExtraWhitespace &#x2F;\s\+$&#x2F;</span><br><span class="line">autocmd InsertEnter * match ExtraWhitespace &#x2F;\s\+\%#\@&lt;!$&#x2F;</span><br><span class="line">autocmd InsertLeave * match ExtraWhitespace &#x2F;\s\+$&#x2F;</span><br><span class="line">autocmd BufWinLeave * call clearmatches()</span><br><span class="line"></span><br><span class="line">set ignorecase</span><br><span class="line">set smartcase</span><br><span class="line">set incsearch</span><br><span class="line">set hlsearch</span><br><span class="line">map &lt;silent&gt; &lt;leader&gt;&lt;CR&gt; :nohlsearch&lt;CR&gt;</span><br><span class="line"></span><br><span class="line">set gdefault</span><br><span class="line"></span><br><span class="line">set pastetoggle&#x3D;&lt;F7&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">很多服务器上的至今仍然装着vim7，没有基本的配置，vim是很难用的，经常会遇到空格和tab混用的问题。使用vim，需要先从配置开始。</summary>
    
    
    
    <category term="linux" scheme="https://venuslee.vercel.app/categories/linux/"/>
    
    
    <category term="原创" scheme="https://venuslee.vercel.app/tags/%E5%8E%9F%E5%88%9B/"/>
    
  </entry>
  
  <entry>
    <title>欢迎来到我的小站</title>
    <link href="https://venuslee.vercel.app/2021/03/29/%E6%AC%A2%E8%BF%8E%E4%BD%A0%E7%9A%84%E5%88%B0%E6%9D%A5/"/>
    <id>https://venuslee.vercel.app/2021/03/29/%E6%AC%A2%E8%BF%8E%E4%BD%A0%E7%9A%84%E5%88%B0%E6%9D%A5/</id>
    <published>2021-03-29T15:46:24.000Z</published>
    <updated>2021-04-05T01:57:55.573Z</updated>
    
    <content type="html"><![CDATA[<p>这是我全程用旧手机慢慢爬的小破站，遇到问题全靠百度，正在建设中……</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;这是我全程用旧手机慢慢爬的小破站，遇到问题全靠百度，正在建设中……&lt;/p&gt;
</summary>
      
    
    
    
    <category term="没事瞎写的" scheme="https://venuslee.vercel.app/categories/%E6%B2%A1%E4%BA%8B%E7%9E%8E%E5%86%99%E7%9A%84/"/>
    
    
    <category term="原创" scheme="https://venuslee.vercel.app/tags/%E5%8E%9F%E5%88%9B/"/>
    
  </entry>
  
</feed>
